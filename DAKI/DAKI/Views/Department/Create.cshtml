@model DAKI.Models.DepartmentModel
@{
    ViewBag.Title = "Create Department";
}
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Add New Department</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rules)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rules)
            @Html.ValidationMessageFor(model => model.Rules)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Parent)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Parent, Model.AllDepartments(), "Select department parent...")
            @Html.ValidationMessageFor(model => model.Parent)
        </div>

        <p>
            <input type="submit" value="Create" onclick="@Html.Action("Create","Department")" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "ListPrizes")
</div>
